{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,EAAe,C,SAAEL,E,MAAUC,GAE/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,EAEHK,EAAQF,GAGTG,EAAOH,EAAa,G,CAMRI,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBAEC,IACDC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACrBL,EAAEM,cAERH,EAAQI,OAAOJ,EAAMK,OACrBJ,EAAOG,OAAOH,EAAKI,OACnBH,EAASE,OAAOF,EAAOG,OAEvB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACrDtB,EAAcsB,EAAUN,GACrBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,YAAW,KACN1B,EAAA2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,GACjEA,EAAM,IAEVyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,YAAW,KACN1B,EAAA2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,GAC9DA,EAAM,IAEbc,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promiseValue = { position, delay };\n  \n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n    // Fulfill\n     resolve(promiseValue);\n  } else {\n    // Reject\n    reject(promiseValue);\n  }\n  })\n  \n};\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n     let {\n    elements: { delay, step, amount },\n    } = e.currentTarget;\n  \n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n\n  for (let position = 1; position <= amount; position += 1){\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n             Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        }, delay)\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n             Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        }, delay)\n      });\n    delay += step;\n  }\n};\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","Number","value","position1","then","setTimeout","Notify","success","catch","failure"],"version":3,"file":"03-promises.8cc5d2f3.js.map"}