{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC9B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC9BC,YAAW,KACX,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,EAAe,C,SAAET,E,MAAUC,GAGzBK,EAEHH,EAAQM,GAIbL,EAAOK,EAAa,GAEbR,EAAM,G,CA9CGS,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBAEC,IACDC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACrBL,EAAEM,cAERH,EAAQI,OAAOJ,EAAMK,OACrBJ,EAAOG,OAAOH,EAAKI,OACnBH,EAASE,OAAOF,EAAOG,OAEvB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACrDvB,EAAcuB,EAAUN,GACrBO,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAEZuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAG9E0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAEbuB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAG9Ee,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n     let {\n    elements: { delay, step, amount },\n    } = e.currentTarget;\n  \n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n\n  for (let position = 1; position <= amount; position += 1){\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n       \n             Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      \n      })\n      .catch(({ position, delay }) => {\n        \n             Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        \n      });\n    delay += step;\n  }\n};\n\n\nfunction createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n  setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  let promiseValue = { position, delay };\n  \n \n    if (shouldResolve) {\n    \n     resolve(promiseValue);\n    \n    } else {\n      \nreject(promiseValue);\n      }\n    }, delay)\n   \n    \n  \n  })\n  \n};"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promiseValue","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","Number","value","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.088fb4ee.js.map"}